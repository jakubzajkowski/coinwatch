enum ExperienceLevel {
    BEGINNER, INTERMEDIATE, EXPERT
}

enum Interest {
    BITCOIN, TRADING, ETHEREUM, MINING, DEFI, STAKING, NFTS, NEWS
}

type Mutation {
    addSubscription(userId: ID!, cryptoId: ID!): Subscription
    deleteSubscription(userId: ID!, cryptoId: ID!): Boolean
}

type Subscription {
    id: ID
    user: User
    cryptoCurrency: CryptoCurrency
    subscriptionDate: String
}

type Alert {
    id: ID!
    user: User!
    symbol: String!
    cryptoCurrency: CryptoCurrency!
    changePercent: Float
    oldPrice: Float
    newPrice: Float
    createdAt: String
}

type User {
    id: ID!
    firstName: String!
    lastName: String!
    email: String!
    dateOfBirth: String!
    phoneNumber: String
    country: String!
    password: String!
    preferredCurrency: String!
    experienceLevel: ExperienceLevel!
    interests: [Interest!]!
    agreedToTerms: Boolean!
    receiveUpdates: Boolean!
    subscriptions: [Subscription!]!
}

type CryptoCurrency {
    id: ID!
    cryptoId: String!
    symbol: String!
    name: String!
    imageUrl: String
    currentPrice: Float
    marketCap: Float
    marketCapRank: Int
    fullyDilutedValuation: Float
    totalVolume: Float
    high24h: Float
    low24h: Float
    priceChange24h: Float
    priceChangePercentage24h: Float
    marketCapChange24h: Float
    marketCapChangePercentage24h: Float
    circulatingSupply: Float
    totalSupply: Float
    maxSupply: Float
    ath: Float
    athChangePercentage: Float
    athDate: String
    atl: Float
    atlChangePercentage: Float
    atlDate: String
    lastUpdated: String
}

type CryptoPriceHistory {
    id: ID
    cryptoId: String
    symbol: String
    price: Float
    recordedAt: String
}


type Query {
    getAlerts: [Alert]
    getAlertByUserId(userId: ID!): [Alert]
    getSubscriptionByUserId(userId: ID!): [Subscription]
    getUserById(id: ID!): User
    getCryptoCurrencyByCryptoId(cryptoId: String!): CryptoCurrency
    searchCryptoCurrencyByCryptoId(cryptoId: String!): [CryptoCurrency]
    getCryptoCurrencies(limit: Int, orderBy: String): [CryptoCurrency]
    getCryptoPriceHistory(cryptoId: String!): [CryptoPriceHistory]
}